/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define AS(keycode) &as LS(keycode) keycode

&mt {
    tapping-term-ms = <500>;
};

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U   |  I   |  O   | P |
// |  A  |  S  |  D  |  F  |  G  |     |  H  |  J   |  K   |  L   | ' | 
// |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   | CTRL | META | . |
//             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |
                        display-name = "Base";
                        bindings = <
   &kp Q    &kp W   &kp E   &kp R   &kp T       &kp Y       &kp U   &kp I       &kp O       &kp P
   &kp A    &kp S   &kp D   &kp F   &kp G       &kp H       &kp J   &kp K       &kp L       &kp SEMI
   &kp Z    &kp X   &kp C   &kp V   &kp B       &kp N       &kp M   &kp COMMA   &kp DOT     &kp FSLH
                    &mo 1   &mo 2   &kp RET     &kp SPACE   &mo 3   &kp LALT
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// | !     |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
// | BT1   | BT2 | BT3 | BT4 | BT5 |     | LFT | DWN |  UP | RGT |     |
// | BTCLR |     |     |     |     |     |     |     |     |     |     |
//               | GUI |     | SPC |     | ENT | ESC | TAB |
                        display-name = "Lower";
                        bindings = <
   AS(N1)      AS(N2)       AS(N3)       AS(N4)       AS(N5)           AS(N6)      AS(N7)    AS(N8)    AS(N9)      AS(N0)
   &kp LGUI    &kp LALT     &kp LSHFT    &kp LCTL     &trans           &trans      &kp RCTL  &kp RSHFT &kp LALT    &kp LGUI 
   &trans      &trans       &trans       &trans       &trans           &trans      &trans    &trans    &trans        &trans 
                            &trans       &kp TAB      &kp DEL          &kp BSPS    &kp ESC   &kp TAB
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | 1! |  2@ |  3# |  4$ |  5% |     |  6^ |  7& |  8* |  9(  |  0)  |
// | -_ |  =+ |  {  |  [  |  (  |     |  )  |  ]  |  }  |  /?  |  \|  |
// | `~ |     |     |     |     |     |  ;  |  .> | CTRL| META |      |
//            | GUI | ESC | SPC |     | ENT |     | TAB |
                        display-name = "Raise";
                        bindings = <

   &kp F1    &kp F2     &kp F3      &kp F4      &kp F5          &kp F8    &kp F9    &kp F10     &kp F11   &kp F12
   AS(GRAVE) &kp LBRC   &kp LBKT    &kp LPAR    AS(MINUS)       AS(EQUAL) &kp RPAR  &kp RBKT    &kp RBRC  AS(SQT)
   &trans    &trans     &trans      &trans      &trans          &trans    &trans    &trans      &trans    AS(BSLH)
                        &kp TAB     &trans      &kp DEL         &kp BSPS  &kp ESC   &kp TAB
                        >;
                };

                move_laver {
// -----------------------------------------------------------------------------------------
// | 1! |  2@ |  3# |  4$ |  5% |     |  6^ |  7& |  8* |  9(  |  0)  |
// | -_ |  =+ |  {  |  [  |  (  |     |  )  |  ]  |  }  |  /?  |  \|  |
// | `~ |     |     |     |     |     |  ;  |  .> | CTRL| META |      |
//            | GUI | ESC | SPC |     | ENT |     | TAB |
                        display-name = "Move";
                        bindings = <

   &trans       &trans      &trans      &trans      &trnas              &trans      &trans    &trans    &trans      &kp BSPS
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &kp LEFT    &kp DOWN  &kp UP    &kp RIGHT   AS(SQT) 
   &bt BT_CLR   &trans      &trans      &trans      &trans              &trans      &trans    &trans    &trans      AS(BSLH)
                            &kp TAB     &kp ESC     &kp DEL             &kp BSPS    &trans    &kp TAB
                        >;
                };

                extra_2 {
                        status = "reserved";
                };

                extra_3 {
                        status = "reserved";
                };
        };
};
